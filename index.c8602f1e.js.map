{"mappings":"YACA,IAAMA,EAAYC,SAASC,cAAc,YACnCC,EAAYF,SAASC,cAAc,eACnCE,EAAUH,SAASC,cAAc,SACvCG,QAAQC,IAAIF,EAAQG,OACpB,IAAIC,EAAS,GAIPC,EAAU,mCAiEhB,SAASC,IAAiB,QAAAC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GACtBC,MAAM,yDAAiEC,OAART,EAAQ,oBAClEU,MAAK,SAACC,GACH,OAAOA,EAAIC,UAEdF,MAAK,SAACG,GACeA,EAAKC,OACbC,SAAQ,SAAAC,GACd,IAAK,IAAIC,EAAQ,EAAGA,EAAQZ,EAAQD,OAAQa,IAAS,CACjD,IAAMC,EAAUb,EAAQY,GACxB,GAAID,EAAGG,KAAOD,EAAS,CACnBnB,EAAOqB,KAAKJ,EAAGK,MACf,IAAIC,EAAQvB,EAAOwB,QAAO,SAACC,EAAMC,EAAGC,G,OAAOA,EAAGC,QAAQH,KAAUC,KACpE7B,QAAQC,IAAIyB,WAzEhC5B,EAAUkC,iBAAiB,SAQ3B,SAAwBC,GACpBA,EAAMC,iBACNtB,MAAM,2DAAmEC,OAART,IAAWU,MAAK,SAACqB,GAC9E,OAAOA,EAASnB,UAEfF,MAAK,SAAAsB,G,IAAGC,EAAOD,EAAPC,QACLrC,QAAQC,IAAIoC,GACZ,IAAMC,EAAWD,EAAQE,KAAI,SAAAC,G,IAAGC,EAAKD,EAALC,MAAOC,EAAaF,EAAbE,cAAyBC,GAAFH,EAARI,SAAsBJ,EAAZG,cAAcE,EAASL,EAATK,UAC1E,MAAO,oEACsChC,OAAtB6B,EAAc,UAEf7B,OAFuB4B,EAAM,gFAG5B5B,OADD4B,EAAM,+CACY5B,OAAjB8B,EAAa,MAAc9B,OAAVgC,EAAU,uCAEpDC,KAAK,IAGP,OADA9C,QAAQC,IAAIqC,GACL3C,EAAUoD,mBAAmB,YAAaT,SAxB7DvC,EAAQiC,iBAAiB,SAEzB,SAAqBC,GACLlC,EAAQG,SA8BpBU,MAAM,2DAAmEC,OAART,IAAWU,MAAK,SAACC,GAC9E,OAAOA,EAAIC,UACZF,MAAK,SAAAkC,G,IAAGX,EAAOW,EAAPX,QACPrC,QAAQC,IAAIoC,GAEZ,IAAMY,EAAOZ,EAAQE,KAAI,SAAAC,G,IAAGC,EAAKD,EAALC,MAAOS,EAAWV,EAAXU,YAAuBP,GAAFH,EAARI,SAAsBJ,EAAZG,cAAcE,EAASL,EAATK,UAC9DM,EAASR,EAAaS,MAAM,EAAG,GAC/BC,EAAYhD,EAAiBwC,GAKnC,MAAO,oGACyEhC,OAArBqC,EAAY,WAE7CrC,OAFsD4B,EAAM,kFAG3D5B,OADD4B,EAAM,+CACM5B,OAAXsC,EAAO,MAActC,OAAVwC,EAAU,uCAE9CP,KAAK,IAEX,OAAOnD,EAAUoD,mBAAmB,YAAaE,MA+BzDjD,QAAQC,IAAII,EAAiB,GAAG,K","sources":["src/index.js"],"sourcesContent":["\nconst galleryEl = document.querySelector('.gallery');\nconst formBtnEl = document.querySelector('.header-btn');\nconst inputEl = document.querySelector('input')\nconsole.log(inputEl.value);\nlet genres = [];\n\n\n\nconst API_KEY = '532c56a8c591a340308597d9f66fd331';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/550?api_key=532c56a8c591a340308597d9f66fd331';\n\nlet inputText = '';\nformBtnEl.addEventListener('click', onFormBtnClick);\ninputEl.addEventListener('input', onInputType)\n\nfunction onInputType(event) {\n    inputText = inputEl.value;\n    // const inputText = event.currentTarget.searchQuery.value.trim();\n}\n\nfunction onFormBtnClick(event) {\n    event.preventDefault();\n    fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then((response) => {\n        return response.json();\n    })\n        .then(({ results }) => {\n            console.log(results);\n            const resTitle = results.map(({ title, backdrop_path, overview, release_date, genre_ids }) => {\n                return `<div class=\"gallery-item\">\n        <img class=\"gallery-img\" src=${backdrop_path} alt=\"${title}\">\n        <div class=\"gallery-info\">\n            <p class=\"gallery-name\">${title}</p>\n            <p class=\"gallery-about\">${release_date}, ${genre_ids}</p>\n        </div>\n    </div>`}).join('');\n\n            console.log(resTitle);\n            return galleryEl.insertAdjacentHTML('beforeend', resTitle)\n        });\n    \n}\nstartPageWithTrendingMovies();\n\n\n\nfunction startPageWithTrendingMovies() {\n    fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then((res) => {\n        return res.json()\n    }).then(({ results } ) => {\n        console.log(results);\n\n        const film = results.map(({ title, poster_path, overview, release_date, genre_ids }) => {\n            const dateOf = release_date.slice(0, 4);\n            const genreName = searchGenresName(genre_ids);\n\n            // console.log(genreName);\n            // console.log(genre_ids);\n\n            return `<div class=\"gallery-item\">\n        <img class=\"gallery-img\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" />\n        <div class=\"gallery-info\">\n            <p class=\"gallery-name\">${title}</p>\n            <p class=\"gallery-about\">${dateOf}, ${genreName}</p>\n        </div>\n    </div>`}).join('');\n\n        return galleryEl.insertAdjacentHTML('beforeend', film)\n    })\n}\n\n\n\nfunction searchGenresName(...genreId) {\n    fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`)\n        .then((res) => {\n            return res.json()\n        })\n        .then((data) => {\n            const genreName = data.genres;\n            genreName.forEach(el => {\n                for (let index = 0; index < genreId.length; index++) {\n                    const element = genreId[index];\n                    if (el.id === element) {\n                        genres.push(el.name);\n                        let uniqe = genres.filter((item, i, ar) => ar.indexOf(item) === i);\n                    console.log(uniqe);\n                }\n                    \n                }\n                \n            });\n        }\n        )\n}\n// let unique = a.filter((item, i, ar) => ar.indexOf(item) === i);\n// console.log(unique);\n\nconsole.log(searchGenresName(35,18));"],"names":["$b8f9b7833fa37166$var$galleryEl","document","querySelector","$b8f9b7833fa37166$var$formBtnEl","$b8f9b7833fa37166$var$inputEl","console","log","value","$b8f9b7833fa37166$var$genres","$b8f9b7833fa37166$var$API_KEY","$b8f9b7833fa37166$var$searchGenresName","_len","arguments","length","genreId","Array","_key","fetch","concat","then","res","json","data","genres","forEach","el","index","element","id","push","name","uniqe","filter","item","i","ar","indexOf","addEventListener","event","preventDefault","response","param1","results","resTitle","map","param","title","backdrop_path","release_date","overview","genre_ids","join","insertAdjacentHTML","param2","film","poster_path","dateOf","slice","genreName"],"version":3,"file":"index.c8602f1e.js.map"}