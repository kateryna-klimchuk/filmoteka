{"mappings":"AAAO,MAAMA,EAAS,CACtB,CAACC,GAAI,GAAIC,KAAM,UACf,CAACD,GAAI,GAAIC,KAAM,aACf,CAACD,GAAI,GAAIC,KAAM,aACf,CAACD,GAAI,GAAIC,KAAM,UACf,CAACD,GAAI,GAAIC,KAAM,SACf,CAACD,GAAI,GAAIC,KAAM,eACf,CAACD,GAAI,GAAIC,KAAM,SACf,CAACD,GAAI,MAAOC,KAAM,UAClB,CAACD,GAAI,GAAIC,KAAM,WACf,CAACD,GAAI,GAAIC,KAAM,WACf,CAACD,GAAI,GAAIC,KAAO,UAChB,CAACD,GAAI,MAAOC,KAAM,SAClB,CAACD,GAAI,KAAMC,KAAM,WACjB,CAACD,GAAI,MAAOC,KAAM,WAClB,CAACD,GAAI,IAAKC,KAAM,mBAChB,CAACD,GAAI,MAAOC,KAAM,YAClB,CAACD,GAAI,GAAIC,KAAM,YACf,CAACD,GAAI,MAAOC,KAAM,OAClB,CAACD,GAAI,GAAIC,KAAM,YCjBTC,EAAYC,SAASC,cAAc,YACnCC,EAAYF,SAASC,cAAc,eACnCE,EAAUH,SAASC,cAAc,SACvCG,QAAQC,IAAIF,EAAQG,OAQpB,IAAIC,EAAY,GAChBL,EAAUM,iBAAiB,SAQ3B,SAAwBC,GACpBA,EAAMC,iBACNC,MAAM,4FAAsEC,MAAMC,GACvEA,EAASC,SAEfF,MAAK,EAACG,QAAEA,MACLX,QAAQC,IAAIU,GACZ,MAAMC,EAAWD,EAAQE,KAAI,EAACC,MAAEA,EAAKC,cAAEA,EAAaC,SAAEA,EAAQC,aAAEA,EAAYC,UAAEA,KACnE,oGACgDH,UAAsBD,oFAEvDA,+CACCG,MAAiBC,sCAE1CC,KAAK,IAGP,OADAnB,QAAQC,IAAIW,GACLjB,EAAUyB,mBAAmB,YAAaR,SAxB7Db,EAAQK,iBAAiB,SAEzB,SAAqBC,GACjBF,EAAYJ,EAAQG,SA8BpBK,MAAM,4FAAsEC,MAAMa,GACvEA,EAAIX,SACZF,MAAK,EAACG,QAAEA,MAEP,MAAMW,EAAOX,EAAQE,KAAI,EAACC,MAAEA,EAAKS,YAAEA,EAAWP,SAAEA,EAAQC,aAAEA,EAAYC,UAAEA,MACpE,MAAMM,EAASP,EAAaQ,MAAM,EAAG,GAC/BC,EAAY,GAClB,IAAK,MAAMC,KAAMnC,EACb,IAAK,MAAMoC,KAAOV,EACVS,EAAGlC,KAAOmC,GACVF,EAAUG,KAAKF,EAAGjC,MAO9B,MAAO,oIACoF6B,WAAqBT,sFAEtFA,+CACCY,OAAeF,uCAExCL,KAAK,IAEX,OAAOxB,EAAUyB,mBAAmB,YAAaE","sources":["src/partials/movieGenre.js","src/index.js"],"sourcesContent":["export const genres = [\n{id: 28, name: \"Action\"},\n{id: 12, name: \"Adventure\"},\n{id: 16, name: \"Animation\"},\n{id: 35, name: \"Comedy\"},\n{id: 80, name: \"Crime\"},\n{id: 99, name: \"Documentary\"},\n{id: 18, name: \"Drama\"},\n{id: 10751, name: \"Family\"},\n{id: 14, name: \"Fantasy\"},\n{id: 36, name: \"History\"},\n{id: 27, name:  \"Horror\"},\n{id: 10402, name: \"Music\"},\n{id: 9648, name: \"Mystery\"},\n{id: 10749, name: \"Romance\"},\n{id: 878, name: \"Science Fiction\"},\n{id: 10770, name: \"TV Movie\"},\n{id: 53, name: \"Thriller\"},\n{id: 10752, name: \"War\"},\n{id: 37, name: \"Western\"},\n]","import { genres } from \"./partials/movieGenre\";\n\nconst galleryEl = document.querySelector('.gallery');\nconst formBtnEl = document.querySelector('.header-btn');\nconst inputEl = document.querySelector('input')\nconsole.log(inputEl.value);\n\n\n\nconst API_KEY = '532c56a8c591a340308597d9f66fd331';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/movie/550?api_key=532c56a8c591a340308597d9f66fd331';\n\nlet inputText = '';\nformBtnEl.addEventListener('click', onFormBtnClick);\ninputEl.addEventListener('input', onInputType)\n\nfunction onInputType(event) {\n    inputText = inputEl.value;\n    // const inputText = event.currentTarget.searchQuery.value.trim();\n}\n\nfunction onFormBtnClick(event) {\n    event.preventDefault();\n    fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then((response) => {\n        return response.json();\n    })\n        .then(({ results }) => {\n            console.log(results);\n            const resTitle = results.map(({ title, backdrop_path, overview, release_date, genre_ids }) => {\n                return `<div class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"\"><img class=\"gallery-img\" src=${backdrop_path} alt=\"${title}\"></a>\n        <div class=\"gallery-info\">\n            <p class=\"gallery-name\">${title}</p>\n            <p class=\"gallery-about\">${release_date}, ${genre_ids}</p>\n        </div>\n    </div>`}).join('');\n\n            console.log(resTitle);\n            return galleryEl.insertAdjacentHTML('beforeend', resTitle)\n        });\n    \n}\nstartPageWithTrendingMovies();\n\n\n\nfunction startPageWithTrendingMovies() {\n    fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`).then((res) => {\n        return res.json()\n    }).then(({ results } ) => {\n\n        const film = results.map(({ title, poster_path, overview, release_date, genre_ids }) => {\n            const dateOf = release_date.slice(0, 4);\n            const genreName = [];\n            for (const el of genres) {\n                for (const gen of genre_ids) {\n                    if (el.id === gen) {\n                        genreName.push(el.name)\n                    }\n                }\n            }\n\n\n\n            return `<div class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"\"><img class=\"gallery-img\" src=\"https://image.tmdb.org/t/p/w300${poster_path}\" alt=\"${title}\" /></a>\n        <div class=\"gallery-info\">\n            <p class=\"gallery-name\">${title}</p>\n            <p class=\"gallery-about\">${genreName} | ${dateOf}</p>\n        </div>\n    </div>`}).join('');\n\n        return galleryEl.insertAdjacentHTML('beforeend', film)\n    })\n}\n\n\n// function searchGenresName(...genreId) {\n//     fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}&language=en-US`)\n//         .then((res) => {\n//             return res.json()\n//         })\n//         .then((data) => {\n//             const genreName = data.genres;\n//             genreName.forEach(el => {\n//                 for (let index = 0; index < genreId.length; index++) {\n//                     const element = genreId[index];\n//                     if (el.id === element) {\n//                         // genres.push(el.name);\n//                         // let uniqe = genres.filter((item, i, ar) => ar.indexOf(item) === i);\n//                         console.log(uniqe);\n//                         return uniqe;\n//                 }\n                    \n//                 }\n                \n//             });\n//         }\n//         )\n// }\n\n\n// console.log(searchGenresName(35,28));"],"names":["$aeb9375c8dbbcee1$export$be3a0ca764f9df2b","id","name","$1f0dc3b9307be026$var$galleryEl","document","querySelector","$1f0dc3b9307be026$var$formBtnEl","$1f0dc3b9307be026$var$inputEl","console","log","value","$1f0dc3b9307be026$var$inputText","addEventListener","event","preventDefault","fetch","then","response","json","results","resTitle","map","title","backdrop_path","overview","release_date","genre_ids","join","insertAdjacentHTML","res","film","poster_path","dateOf","slice","genreName","el","gen","push"],"version":3,"file":"index.64a64ac9.js.map"}